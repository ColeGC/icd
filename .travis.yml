# vim: tabstop=2 softtabstop=2 expandtab
# https://docs.travis-ci.com/user/languages/r
# https://ropensci.org/blog/2016/07/12/travis-osx
# https://docs.travis-ci.com/user/ci-environment/
# https://docs.travis-ci.com/user/languages/r
# https://docs.travis-ci.com/user/build-matrix/
# https://docs.travis-ci.com/user/languages/cpp/
#
# Use environment variables to tell R CMD check/build where to get environments
# https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Checking-and-building-packages
# https://github.com/travis-ci/travis-build/blob/master/lib/travis/build/script/r.rb
language: r
# ccache would need installing, configuring, can't just add ccache here, I don't think. Would it cache between builds if not here?
cache: packages
# TODO: make warnings cause job failure once environment is fixed
warnings_are_errors: false
# I think fortran may be a downstream dependency of RcppEigen, but start v minimal. fortran config only recognized on osx travis builds?
fortran: false
pandoc: false
latex: false
use_devtools: false
disable_homebrew: true
# can/will also set any/all build/check args with environment variables. --as-cran is default, which I do NOT want. Using tailored environment from tools/env/cran
r_build_args: --no-build-vignettes --no-manual --resave-data=no
r_check_args: --no-build-vignettes --no-manual --no-vignettes --ignore-vignettes --no-codoc
os:
  - linux
  - osx

# default 2020-04-01 is xenial, not bionic
dist: xenial

r:
  - devel
  - release
  - oldrel

# Rcpp*, rappdirs and testthat all contain compiled code, so including here for much faster travis init.
# However, the R travis ruby script installs Depends _and_ Recommended r-cran-xxx, and this commonly brings in r-cran-testthat, and thus a ton of dependencies. This is fine, except some are not built for R-4.0.0 yet: at least R6 and callr. Thus I want here to install as many dependencies here, which do nor Depend on testthat, R6, callr.
r_binary_packages:
  - Rcpp
  - RcppEigen
  - digest
  - 'digest --no-install-recommends' # this will never work!
  - testthat
  - rappdirs
# temporarily disabled because of R6 depdence, which isn't built for CRAN yet with R-4.0.0
# adding other testthat deps here in the meantime? R6 and callr trouble so far. travis R installs apt recommended packages, which often bring in testthat, then problems. Probably because i've now let apt cran builds take precedence?
# - testthat
#- assertthat
#- cli
#   - crayon
# - evaluate
#   - magrittr
#      - praise
#      - rlang
# - rmarkdown
#  - withr
#  - xml2

# see also travis-global environment file
env:
  global:
    - ICD_SHUTUP=true
    - ICD_MINI_BENCH=false
    - ICD_COVERAGE=false
    - ICD_TEST_SLOW=false
    - ICD_DATA_OFFLINE=true
    - ICD_DATA_INTERACT=false
    - ICD_KEEP_MAKEVARS=true
    - R_CHECK_ENVIRON=tools/env/travis-global

# Cannot export shell environment variables in these stanzas:
# https://github.com/travis-ci/travis-ci/issues/7472
before_install:
  - tools/dump-env.sh;
  - mkdir -p ~/.R;
  - echo '^vignettes\/.*-vignette\.Rnw$' >> .Rbuildignore;
  - tools/DESCRIPTION-minimalize.sh > DESC.min && mv -f DESC.min DESCRIPTION;
    # check by default ignores user paths, and the library path doesn't include the r_binary_packages paths, AFAICT. DYLD_LIBRARY_PATH for MacOS may be needed for brew-installed compilers?
  - echo "R_LD_LIBRARY_PATH=/usr/lib/R/site-library/RcppEigen/libs:/usr/lib/R/site-library/Rcpp/libs:${R_LD_LIBRARY_PATH}" |
    tee -a "${HOME}/.R/Renviron" "${HOME}/.R/build.Renviron" "${HOME}/.R/check.Renviron" "tools/env/travis-global"
  - Rscript -e 'update.packages(checkBuilt=TRUE); install.packages(c("R6", "callr"), dependencies = FALSE)' # in order that testthat apt CRAN binary is met while travis is catching up with R-4.0.0

before_script:
  - tools/dump-env.sh;

after_success:
  - tools/dump-env.sh
  - if [[ "$ICD_MINI_BENCH" == "true" ]]; then
    cd benchmarks/icd-JSS3447-replication;
    eval "make bench3";
    eval "make replmat";
    cd ../..;
    fi
  - if [[ "$ICD_COVERAGE" == "true" ]]; then
     Rscript -e 'source("tools/split-tests.R"); testthat_split();';
     Rscript -e 'install.packages("covr"); covr::codecov(quiet = FALSE)';
   fi

after_failure:
  - tools/dump-env.sh;

jobs:
  fast_finish: true
  allow_failures:
    - os: osx
    - r: oldrel
    - r: devel

notifications:
  email:
    on_success: change
    on_failure: always
