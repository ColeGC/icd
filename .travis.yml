# vim: tabstop=2 softtabstop=2 expandtab
# https://docs.travis-ci.com/user/languages/r
# https://ropensci.org/blog/2016/07/12/travis-osx
# https://docs.travis-ci.com/user/ci-environment/
# https://docs.travis-ci.com/user/languages/r
# https://docs.travis-ci.com/user/build-matrix/
# https://docs.travis-ci.com/user/languages/cpp/
#
# Use environment variables to tell R CMD check/build where to get environments
# https://cran.r-project.org/doc/manuals/r-release/R-exts.html#Checking-and-building-packages
# https://github.com/travis-ci/travis-build/blob/master/lib/travis/build/script/r.rb
language: r
cache: packages
# TODO: make warnings cause job failure once environment is fixed
warnings_are_errors: false
# I think fortran may be a downstream dependency of RcppEigen, but start v minimal
fortran: false
pandoc: false
latex: false
use_devtools: false
disable_homebrew: true
# can/will also set any/all build/check args with environment variables.
r_build_args: --no-build-vignettes --no-manual --resave-data=no
r_check_args: --no-build-vignettes --no-vignettes --ignore-vignettes --no-codoc --no-manual
os:
  - linux
  - osx

# default 2020-04-01 is xenial, not bionic
dist: xenial

r:
  - devel
  - release
  - oldrel

# Rcpp*, rappdirs and testthat all contain compiled code.
r_binary_packages:
  - Rcpp
  - RcppEigen
  - rappdirs
  - testthat

# see also travis-global environment file
env:
  global:
    - ICD_SHUTUP=true
    - ICD_MINI_BENCH=false
    - ICD_COVERAGE=false
    - ICD_TEST_SLOW=false
    - ICD_DATA_OFFLINE=true
    - ICD_DATA_INTERACT=false

# Cannot export shell environment variables in these stanzas:
# https://github.com/travis-ci/travis-ci/issues/7472
before_install:
  - tools/dump-env.sh;
  - mkdir -p ~/.R;
  - echo '^vignettes\/.*-vignette\.Rnw$' >> .Rbuildignore;
  - tools/DESCRIPTION-minimalize.sh > DESC.min && mv -f DESC.min DESCRIPTION;

before_script:
  - tools/dump-env.sh;

after_success:
  - tools/dump-env.sh
  - if [[ "$ICD_MINI_BENCH" == "true" ]]; then
    cd benchmarks/icd-JSS3447-replication;
    eval "make bench3";
    eval "make replmat";
    cd ../..;
    fi
  - if [[ "$ICD_COVERAGE" == "true" ]]; then
     Rscript -e 'source("tools/split-tests.R"); testthat_split();';
     Rscript -e 'install.packages("covr"); covr::codecov(quiet = FALSE)';
   fi

after_failure:
  - tools/dump-env.sh;

jobs:
  fast_finish: true
  allow_failures:
    - os: osx
    - r: oldrel
    - r: devel

notifications:
  email:
    on_success: change
    on_failure: always
